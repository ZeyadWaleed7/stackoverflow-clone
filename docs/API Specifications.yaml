openapi: 3.0.3
info:
  title: Stack Overflow Clone API
  description: API specification for the Stack Overflow Clone, a web application for asking and answering questions, voting, and receiving notifications.
  version: 1.0.0

servers:
  - url: http://localhost:8080/api
    description: Local development server
  - url: https://api.stackoverflowclone.com
    description: Production server

# Security scheme for JWT authentication (as per non-functional requirement: "Protect APIs with JWT")
security:
  - bearerAuth: []

paths:
  # User APIs
  /auth/google:
    post:
      summary: Authenticate using Google OAuth
      description: Authenticates a user using Google OAuth2 and returns a JWT token for subsequent requests. This endpoint uses synchronous communication to provide immediate feedback to the user (ADR-006).
      operationId: authenticateGoogle
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Unauthorized - Invalid Google credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - User

  /users/{id}:
    get:
      summary: Get user profile
      description: Retrieves the profile of a user by their ID, including their reputation score. This endpoint uses synchronous communication for immediate response.
      operationId: getUserProfile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - User

  # Question APIs
  /questions:
    post:
      summary: Create a question
      description: Creates a new question. This endpoint uses synchronous communication to provide immediate feedback to the user.
      operationId: createQuestion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionInput'
      responses:
        '201':
          description: Question created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '400':
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Question
    get:
      summary: Fetch all questions
      description: Retrieves a list of all questions, with optional search filters. This endpoint uses synchronous communication and may leverage Redis caching for performance (ADR-002).
      operationId: getAllQuestions
      parameters:
        - name: search
          in: query
          required: false
          schema:
            type: string
          description: Keyword to search questions by (optional)
      responses:
        '200':
          description: List of questions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
      tags:
        - Question

  /questions/{id}:
    get:
      summary: Fetch a specific question
      description: Retrieves a specific question by its ID. This endpoint uses synchronous communication and may leverage Redis caching (ADR-002).
      operationId: getQuestionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the question
      responses:
        '200':
          description: Question retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '404':
          description: Question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Question

  # Answer APIs
  /questions/{id}/answers:
    post:
      summary: Add an answer to a question
      description: Adds an answer to a specific question. This endpoint uses synchronous communication for the answer submission, but triggers an asynchronous notification to the question owner (ADR-007).
      operationId: createAnswer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the question
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerInput'
      responses:
        '201':
          description: Answer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
        '400':
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Answer
    get:
      summary: Fetch answers for a question
      description: Retrieves all answers for a specific question. This endpoint uses synchronous communication.
      operationId: getAnswersForQuestion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the question
      responses:
        '200':
          description: List of answers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer'
        '404':
          description: Question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Answer

  # Vote APIs
  /questions/{id}/vote:
    post:
      summary: Upvote or downvote a question
      description: Allows a user to upvote or downvote a question. This endpoint uses synchronous communication for the vote action, but triggers an asynchronous notification to the question owner (ADR-007).
      operationId: voteOnQuestion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the question
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoteInput'
      responses:
        '200':
          description: Vote recorded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoteResponse'
        '400':
          description: Bad request - Invalid vote type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Vote

  /answers/{id}/vote:
    post:
      summary: Upvote or downvote an answer
      description: Allows a user to upvote or downvote an answer. This endpoint uses synchronous communication for the vote action, but triggers an asynchronous notification to the answer owner (ADR-007).
      operation